
apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "top.itmp.rtbox.example"
        minSdkVersion 9
        targetSdkVersion 23

        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir 'libs'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /**
     * Task to rename executables from hello_world to libhello_world_exec.so
     * If they look like libraries, they are packaged in the apk and deployed on the device in the lib folder!
     *
     * http://www.gradle.org/docs/current/userguide/working_with_files.html
     */
    task renameExecutables(type: Copy) {
        from 'libs'
        into 'libs'
        include '**/*'
        exclude '**/*.so'
        exclude '**/*.jar'

        rename(/(.+)/, 'lib$1_bin.so')
    }

    task ndkBuild(type: Exec) {
        commandLine 'ndk-build', '-j4'
    }

    //renameExecutables.dependsOn(ndkBuild)
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative, renameExecutables
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        //def ndkDir = android.ndkDirectory.getAbsolutePath()

        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            commandLine  "ndk-build.cmd",
                    '-C', file('jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    '-j', Runtime.runtime.availableProcessors()
            //'all',
            //'NDK_DEBUG=1'
        }else{
            commandLine "ndk-build",
                    '-C', file('jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    '-j', Runtime.runtime.availableProcessors()
            //'all',
            //'NDK_DEBUG=1'
        }
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        //def ndkDir = android.ndkDirectory.getAbsolutePath()
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            commandLine "ndk-build.cmd",
                    '-C', file('jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    'clean'
        } else {
            commandLine "ndk-build",
                    '-C', file('jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    'clean'
        }
    }

    clean.dependsOn 'cleanNative'

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.4.0'

    compile project(':rtbox')
}
